generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model Exam {
  id           String       @id @default(cuid())
  subject      String
  semester     Int
  section      String
  branch       String
  language     String
  inchargeName String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  questions    Question[]
  submissions  Submission[]
}

model Question {
  id          String       @id @default(cuid())
  title       String
  description String
  examId      String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  exam        Exam         @relation(fields: [examId], references: [id], onDelete: Cascade)
  submissions Submission[]

  @@index([examId])
}

model Submission {
  id         String   @id @default(cuid())
  usn        String
  status     String
  code       String
  examId     String
  questionId String
  subject    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  exam       Exam     @relation(fields: [examId], references: [id], onDelete: Cascade)
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  @@index([examId])
  @@index([questionId])
}

enum Status {
  SUBMITTED
  NOT_SUBMITTED
}

enum Outcome {
  ALL_PASSED
  PARTIALLY_PASSED
  FAILED
  NOT_EVALUATED
}
